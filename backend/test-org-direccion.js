// Test para verificar que el registro de organizaciones funciona con direcci√≥n

console.log('üß™ Probando registro de organizaciones con el campo direcci√≥n...\n');

async function testOrganizacionRegister() {
  const testData = {
    nombreOrganizacion: `Fundaci√≥n Test ${Date.now()}`,
    nombreRepresentante: 'Mar√≠a Gonz√°lez',
    correoRepresentante: `test.org.${Date.now()}@example.com`,
    password: 'Test123456',
    telefono: '+1-555-0123',
    sitioWeb: 'https://www.testorg.com',
    direccion: 'Av. Principal 456, Edificio Central, Piso 3, Santo Domingo, Rep√∫blica Dominicana',
    descripcion: 'Organizaci√≥n dedicada a brindar apoyo educativo y social a comunidades vulnerables. Nuestro objetivo es mejorar la calidad de vida de las familias mediante programas de capacitaci√≥n y desarrollo comunitario.'
  };

  try {
    console.log('üì§ Enviando datos de registro de organizaci√≥n...');
    console.log('Datos:', JSON.stringify(testData, null, 2));
    
    const response = await fetch('http://localhost:3001/api/organizacion/register', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(testData)
    });

    const result = await response.json();
    
    console.log(`\nüì• Respuesta del servidor (${response.status}):`);
    console.log(JSON.stringify(result, null, 2));
    
    if (result.success) {
      console.log('\n‚úÖ ¬°Registro de organizaci√≥n exitoso con direcci√≥n!');
      console.log(`üìç Direcci√≥n registrada: ${testData.direccion}`);
    } else {
      console.log('\n‚ùå Error en el registro de organizaci√≥n');
      if (result.errors) {
        console.log('Errores espec√≠ficos:', result.errors);
      }
    }
    
  } catch (error) {
    console.error('‚ùå Error de conexi√≥n:', error.message);
  }
}

// Solo ejecutar si estamos en Node.js
if (typeof window === 'undefined') {
  testOrganizacionRegister();
}

console.log(`
üéØ Campo direcci√≥n agregado exitosamente:

‚úÖ Frontend:
   - Nuevo campo "Direcci√≥n" en RegisterFormOrganizacion.tsx
   - Textarea con validaci√≥n requerida
   - Icono MapPin para mejor UX
   - Placeholder descriptivo

‚úÖ Backend:
   - Validaci√≥n de longitud (10-300 caracteres)
   - Modelo actualizado para incluir direcci√≥n
   - Servicio de autenticaci√≥n actualizado
   - Campo agregado a la inserci√≥n en base de datos

‚úÖ Base de Datos:
   - Columna 'direccion' ya exist√≠a como TEXT nullable
   - Compatible con datos largos de direcci√≥n

üìç El campo direcci√≥n es obligatorio y permite hasta 300 caracteres
`);
