---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Dashboard - Sistema Voluntariado">
  <main>
    <!-- Header Section -->
    <div class="dashboard-header">
      <div class="header-content">
        <h1 id="welcome-title" class="main-title">Bienvenido, Voluntario</h1>
        <p class="subtitle">Encuentra tu pr√≥ximo evento para ayudar</p>
        
        <!-- Logout Button -->
        <button id="logout-btn" class="logout-button">
          Cerrar Sesi√≥n
        </button>
      </div>
    </div>

    <!-- Dashboard Content -->
    <div class="dashboard-container">
      <div class="stats-section">
        <!-- Stats Cards -->
        <div class="stats-grid">
          <div class="stat-card">
            <div class="stat-content">
              <h3 class="stat-label">HORAS COMPLETADAS</h3>
              <div class="stat-number">24</div>
              <p class="stat-period">Este mes</p>
            </div>
          </div>
          
          <div class="stat-card">
            <div class="stat-content">
              <h3 class="stat-label">ACTIVIDADES</h3>
              <div class="stat-number">8</div>
              <p class="stat-period">Participadas</p>
            </div>
          </div>
          
          <div class="stat-card">
            <div class="stat-content">
              <h3 class="stat-label">ORGANIZACIONES</h3>
              <div class="stat-number">3</div>
              <p class="stat-period">Colaboradas</p>
            </div>
          </div>
          
          <div class="stat-card">
            <div class="stat-content">
              <h3 class="stat-label">CERTIFICADOS</h3>
              <div class="stat-number">2</div>
              <p class="stat-period">Obtenidos</p>
            </div>
          </div>
        </div>

        <!-- Events Section -->
        <div class="events-section">
          <h2 class="section-title">Mis Eventos Inscritos</h2>
          
          <div id="inscribed-events-container">
            <!-- Estado de carga inicial -->
            <div id="events-loading-state" class="loading-state">
              <div class="loading-animation">
                <div class="loading-circle"></div>
                <div class="loading-circle"></div>
                <div class="loading-circle"></div>
              </div>
              <p>Cargando tus eventos inscritos...</p>
            </div>
          </div>
        </div>

        <!-- Navigation to Events -->
        <div class="navigation-section">
          <a href="/dashboard/all-events" class="cta-button">
            <span>Ver Todos los Eventos</span>
            <svg class="arrow-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
            </svg>
          </a>
        </div>
      </div>
    </div>
  </main>
</Layout>

<style>
  /* CSS styles here */
  .dashboard-header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 3rem 0;
    position: relative;
    overflow: hidden;
  }
  
  .header-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
    text-align: center;
    position: relative;
    z-index: 1;
  }
  
  .main-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    text-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }
  
  .subtitle {
    font-size: 1.2rem;
    opacity: 0.9;
    margin-bottom: 2rem;
  }
  
  .logout-button {
    background: rgba(255, 255, 255, 0.2);
    color: white;
    border: 2px solid rgba(255, 255, 255, 0.3);
    padding: 0.75rem 2rem;
    border-radius: 50px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    position: absolute;
    top: 2rem;
    right: 2rem;
  }
  
  .logout-button:hover {
    background: rgba(255, 255, 255, 0.3);
    border-color: rgba(255, 255, 255, 0.5);
    transform: translateY(-2px);
  }
  
  .dashboard-container {
    max-width: 1200px;
    margin: -2rem auto 0;
    padding: 0 2rem;
    position: relative;
    z-index: 2;
  }
  
  .stats-section {
    background: rgba(255, 255, 255, 0.95);
    border-radius: 20px;
    padding: 2rem;
    box-shadow: 0 20px 40px rgba(0,0,0,0.1);
    backdrop-filter: blur(10px);
  }
  
  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-bottom: 3rem;
  }
  
  .stat-card {
    background: rgba(248, 250, 252, 0.7);
    border-radius: 15px;
    padding: 2rem;
    text-align: center;
    border: 1px solid rgba(229, 231, 235, 0.5);
    transition: all 0.3s ease;
  }
  
  .stat-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0,0,0,0.1);
  }
  
  .stat-label {
    color: #6b7280;
    font-size: 0.875rem;
    font-weight: 600;
    letter-spacing: 0.05em;
    margin-bottom: 0.5rem;
    text-transform: uppercase;
  }
  
  .stat-number {
    font-size: 3rem;
    font-weight: 700;
    color: #4f46e5;
    margin-bottom: 0.25rem;
    line-height: 1;
  }
  
  .stat-period {
    color: #9ca3af;
    font-size: 0.875rem;
    margin: 0;
  }
  
  .events-section {
    margin-bottom: 3rem;
  }
  
  .section-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: #1f2937;
    margin-bottom: 1.5rem;
  }
  
  .loading-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 3rem;
    text-align: center;
  }
  
  .loading-animation {
    display: flex;
    gap: 0.5rem;
    margin-bottom: 1rem;
  }
  
  .loading-circle {
    width: 0.5rem;
    height: 0.5rem;
    background: #4f46e5;
    border-radius: 50%;
    animation: bounce 1.4s infinite ease-in-out both;
  }
  
  .loading-circle:nth-child(1) { animation-delay: -0.32s; }
  .loading-circle:nth-child(2) { animation-delay: -0.16s; }
  
  @keyframes bounce {
    0%, 80%, 100% {
      transform: scale(0);
    }
    40% {
      transform: scale(1);
    }
  }
  
  .loading-state p {
    color: #6b7280;
    margin: 0;
  }
  
  .navigation-section {
    text-align: center;
  }
  
  .cta-button {
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
    color: white;
    text-decoration: none;
    padding: 1rem 2rem;
    border-radius: 50px;
    font-weight: 600;
    font-size: 1.1rem;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(79, 70, 229, 0.3);
  }
  
  .cta-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(79, 70, 229, 0.4);
  }
  
  .arrow-icon {
    width: 1.25rem;
    height: 1.25rem;
    transition: transform 0.3s ease;
  }
  
  .cta-button:hover .arrow-icon {
    transform: translateX(4px);
  }
  
  @media (max-width: 768px) {
    .header-content {
      padding: 0 1rem;
    }
    
    .main-title {
      font-size: 2rem;
    }
    
    .logout-button {
      position: static;
      margin-top: 1rem;
    }
    
    .dashboard-container {
      padding: 0 1rem;
      margin-top: -1rem;
    }
    
    .stats-section {
      padding: 1.5rem;
    }
    
    .stats-grid {
      grid-template-columns: 1fr;
      gap: 1rem;
    }
    
    .stat-card {
      padding: 1.5rem;
    }
  }
</style>

<script>
  console.log('üöÄ DASHBOARD SCRIPT INICIADO');
  
  const API_BASE_URL = 'http://localhost:3001/api';
  let inscribedEvents = [];

  // Servicio para eventos
  const EventsService = {
    getAuthHeaders() {
      const token = localStorage.getItem('authToken');
      return {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer ' + token
      };
    },

    async getInscribedEvents() {
      try {
        const response = await fetch(API_BASE_URL + '/eventos/my-inscribed', {
          method: 'GET',
          headers: this.getAuthHeaders()
        });
        return await response.json();
      } catch (error) {
        console.error('Error:', error);
        return { success: false, message: 'Error de conexi√≥n' };
      }
    }
  };

  // Funci√≥n principal
  async function loadInscribedEvents() {
    console.log('üìÖ Cargando eventos inscritos...');
    
    try {
      const response = await EventsService.getInscribedEvents();
      console.log('üì¶ Datos de eventos inscritos:', response);
      
      if (response.success && response.data) {
        inscribedEvents = response.data;
        renderEvents();
      } else {
        renderEvents();
      }
    } catch (error) {
      console.error('‚ùå Error:', error);
      renderEvents();
    }
  }

  function renderEvents() {
    console.log('üé® Renderizando eventos...');
    
    // Remover loading
    const loading = document.getElementById('events-loading-state');
    if (loading) {
      loading.remove();
      console.log('‚úÖ Loading removido');
    }
    
    // Obtener container
    const container = document.getElementById('inscribed-events-container');
    if (!container) {
      console.error('‚ùå Container no encontrado');
      return;
    }
    
    // Renderizar
    if (inscribedEvents.length === 0) {
      container.innerHTML = '<div style="text-align: center; padding: 2rem; color: #6b7280;"><h3>No hay eventos inscritos</h3><p>Explora nuestros eventos disponibles</p></div>';
    } else {
      let html = '';
      inscribedEvents.forEach(function(event) {
        html += '<div style="background: white; border: 1px solid #e5e7eb; border-radius: 8px; padding: 16px; margin-bottom: 16px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">';
        html += '<h3 style="margin: 0 0 8px 0; color: #1f2937; font-size: 18px; font-weight: 600;">' + (event.titulo || 'Sin t√≠tulo') + '</h3>';
        html += '<p style="margin: 0 0 8px 0; color: #4f46e5; font-size: 14px; font-weight: 500;">üè¢ ' + (event.organizacion_nombre || 'Sin organizaci√≥n') + '</p>';
        html += '<p style="margin: 0 0 8px 0; color: #6b7280; font-size: 14px;">üìç ' + (event.ubicacion || 'Sin ubicaci√≥n') + '</p>';
        
        // Agregar fechas si est√°n disponibles
        if (event.fechaInicio || event.fecha_inicio) {
          const fecha = new Date(event.fechaInicio || event.fecha_inicio);
          const fechaFormateada = fecha.toLocaleDateString('es-ES', { 
            year: 'numeric', 
            month: 'short', 
            day: 'numeric' 
          });
          html += '<p style="margin: 0; color: #6b7280; font-size: 14px;">üìÖ ' + fechaFormateada + '</p>';
        }
        
        html += '</div>';
      });
      container.innerHTML = html;
    }
    
    console.log('‚úÖ Eventos renderizados');
  }

  // Funci√≥n de logout
  function logout() {
    localStorage.removeItem('authToken');
    localStorage.removeItem('userType');
    window.location.href = '/login';
  }

  // Inicializar
  document.addEventListener('DOMContentLoaded', function() {
    console.log('üìÑ DOM listo');
    
    // Configurar bot√≥n de logout
    const logoutBtn = document.getElementById('logout-btn');
    if (logoutBtn) {
      logoutBtn.addEventListener('click', logout);
    }
    
    // Cargar eventos
    loadInscribedEvents();
  });
</script>
